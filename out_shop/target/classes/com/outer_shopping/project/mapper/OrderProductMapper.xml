<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.outer_shopping.project.mapper.OrderProductMapper">
	<!-- 
			order 테이블 관련 mapper
			+ order 등록
			+ order 삭제
			+ order 조회
	 -->
	<sql id="all-column">
		ORDER_NO, ORDER_MEMBER_NAME, 
		ORDER_THUMBNAIL_NAME, ORDER_NAME, 
		TOTAL_PRICE, HANDLING, 
		MEMBER_ID, ADDRESS, 
		PHONENUM, EMAIL, 
		MESSAGE, ORDER_DATE
	</sql> 
	
	<!-- ORDER_CHECK 전체 조회 sql -->
	<sql id="select-orderCherk-sql">
		SELECT 	ORDER_NO, ORDER_MEMBER_NAME, 
				ORDER_THUMBNAIL_NAME, ORDER_NAME, 
				TOTAL_PRICE, HANDLING, 
				MEMBER_ID, ADDRESS, 
				PHONENUM, EMAIL, 
				MESSAGE, ORDER_DATE
		FROM ORDER_CHECK
	</sql>	 
	
	<!-- ORDER_PRODUCT 전체 조회 sql -->
	<sql id="select-orderProduct-sql">
		SELECT 	PRODUCT_NO, OUTER_NO, 
				PRODUCT_THUMBNAIL_NAME, PRODUCT_NAME, 
				PRODUCT_COLOR, PRODUCT_SIZE, 
				PRODUCT_PRICE, ORDER_NO	
		FROM ORDER_PRODUCT
	</sql>	 	
	
	
	<!-- ORDER_CHECK + ORDER_PRODUCT sql -->
	<sql id="select-order-product-sql">
	SELECT		c.ORDER_MEMBER_NAME, c.TOTAL_PRICE, c.ORDER_THUMBNAIL_NAME, 
				c.ORDER_NAME, c.HANDLING, 
				c.MEMBER_ID, c.ADDRESS,
				c.PHONENUM, c.EMAIL,
				c.MESSAGE, c.ORDER_DATE,
				p.PRODUCT_NO, p.OUTER_NO, 
				p.PRODUCT_THUMBNAIL_NAME, p.PRODUCT_NAME, 
				p.PRODUCT_COLOR, p.PRODUCT_SIZE, 
				p.PRODUCT_PRICE, p.ORDER_NO			
	FROM		ORDER_CHECK c, ORDER_PRODUCT p	
	WHERE		c.ORDER_NO = p.ORDER_NO (+)
	</sql>
		
	<!-- ORDER_CHECK resultMap -->
	<resultMap id="orderCheck-resultmap" type="com.outer_shopping.project.vo.OrderCheckVo">
		<id column="ORDER_NO" property="orderNo"/>
		<result column="ORDER_MEMBER_NAME" property="memberName"/>
		<result column="ORDER_THUMBNAIL_NAME" property="thumbnailName"/>
		<result column="ORDER_NAME" property="orderName"/>
		<result column="TOTAL_PRICE" property="totalPrice"/>
		<result column="HANDLING" property="handing"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="ADDRESS" property="address"/>
		<result column="PHONENUM" property="phoneNum"/>
		<result column="EMAIL" property="email"/>
		<result column="MESSAGE" property="message"/>
		<result column="ORDER_DATE" property="orderDate"/>
	</resultMap>
	
	<!-- ORDER_PRODUCT resultMap -->
	<resultMap id="orderProduct-resultmap" type="com.outer_shopping.project.vo.OrderProductVo">
			<id column="PRODUCT_NO" property="productNo"/>
			<result column="OUTER_NO" property="outerNo"/>
			<result column="PRODUCT_THUMBNAIL_NAME" property="thumbnailName"/>
			<result column="PRODUCT_NAME" property="productName"/>
			<result column="PRODUCT_COLOR" property="productColor"/>
			<result column="PRODUCT_SIZE" property="productSize"/>
			<result column="PRODUCT_PRICE" property="productPrice"/>
			<result column="ORDER_NO" property="orderNo"/>	
	</resultMap>
	
	
	
	<!-- ORDER_CHECK + ORDER_PRODUCT resultMap -->
	<resultMap type="com.outer_shopping.project.vo.OrderCheckVo" 
							id="orderCheck-orderProduct-resultmap" extends="orderCheck-resultmap" >
		<collection property="productList" ofType="com.outer_shopping.project.vo.OrderProductVo">
			<id column="PRODUCT_NO" property="productNo"/>
			<result column="OUTER_NO" property="outerNo"/>
			<result column="PRODUCT_THUMBNAIL_NAME" property="thumbnailName"/>
			<result column="PRODUCT_NAME" property="productName"/>
			<result column="PRODUCT_COLOR" property="productColor"/>
			<result column="PRODUCT_SIZE" property="productSize"/>
			<result column="PRODUCT_PRICE" property="productPrice"/>
			<result column="ORDER_NO" property="orderNo"/>	
		</collection>
	</resultMap>


	
	<!-- 주문 등록 SQL -->
	<insert id="insertOrder" parameterType="com.outer_shopping.project.vo.OrderCheckVo">
		<selectKey resultType="int" keyProperty="orderNo" order="BEFORE">
			select ORDER_NO.nextval from dual 
		</selectKey>
		INSERT INTO ORDER_CHECK
		VALUES(
				#{orderNo},
				#{memberName},
				#{thumbnailName},
				#{orderName},
				#{totalPrice},
				'결제대기중',
				#{memberId},
				#{address},
				#{phoneNum},
				#{email},
				#{message},
				SYSDATE
			   )
	</insert>
	
	<!-- 상품 등록 SQL -->
	<insert id="insertOrderProduct" parameterType="com.outer_shopping.project.vo.OrderProductVo">
		<selectKey resultType="int" keyProperty="productNo" order="BEFORE">
			select PRODUCT_NO.nextval from dual
		</selectKey>
		INSERT INTO ORDER_PRODUCT
		VALUES(
				#{productNo},
				#{outerNo},
				#{thumbnailName},
				#{productName},
				#{productColor},
				#{productSize},
				#{productPrice},
				#{orderNo}
			   )
	</insert>
	
	<!-- 주문List 카운트  -->
	<select id = "selectOrderListCount" resultType="_int">
		SELECT COUNT(*) FROM ORDER_CHECK
	</select>
	
	<!-- 주문 상태별 List 카운트  -->
	<select id = "selectOrderHandingListCount" parameterType="String" resultType="_int">
		SELECT COUNT(*) 
		FROM ORDER_CHECK
		WHERE HANDLING = #{handing}
	</select>
	
	<!-- 주문 상태 수정 SQL -->
	<update id="handingUpdateOrder" parameterType="hashmap">
		UPDATE 	ORDER_CHECK 
		SET		HANDLING = #{handing}
		WHERE	ORDER_NO = #{orderNo}
	</update>
	
	<!-- 전체 주문 조회  SQL -->
 	<select id="selectOrderList" parameterType="hashmap" resultMap="orderCheck-resultmap">
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM( 			
						<include refid="select-orderCherk-sql"/>
							<choose>
							 	<when test="items == '결제완료'">
						            WHERE HANDLING LIKE '결제완료'
						            ORDER BY ORDER_NO DESC
						        </when>
						        
						        <when test="items == '주문취소완료'">
						            WHERE HANDLING LIKE '주문취소완료'
						            ORDER BY ORDER_NO DESC
						        </when>
						        
						        <when test="items == '상품준비중'">
						            WHERE HANDLING LIKE '상품준비중'
						            ORDER BY ORDER_NO DESC
						        </when>
						        
						        <when test="items == '주문취소'">
						            WHERE HANDLING LIKE '주문취소'
						            ORDER BY ORDER_NO DESC
						        </when>
						        
						        <when test="items == '배송중'">
						            WHERE HANDLING LIKE '배송중'
						            ORDER BY ORDER_NO DESC
						        </when>
						        <when test="items == '결제대기중'">
						            WHERE HANDLING LIKE '결제대기중'
						            ORDER BY ORDER_NO DESC
						        </when>
						        <when test="items == '배송완료'">
						            WHERE HANDLING LIKE '배송완료'
						            ORDER BY ORDER_NO DESC
						        </when>							        
						        <!-- 전체 검색이 아닐 경우 -->
						        <otherwise>
						            ORDER BY ORDER_NO DESC
						        </otherwise>
						    </choose>
						
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}		
	</select>



	
	<!-- 회원 주문 List 카운트  -->
	<select id = "selectOrderMemberIdDateListCount" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*) 
		FROM ORDER_CHECK
		WHERE MEMBER_ID = #{memberId}
	    <choose>
		 	<when test="items == '1달'">
			 <![CDATA[
		 		AND to_char(ORDER_DATE,'YYYY-MM-DD') <=	to_char(SYSDATE,'YYYY-MM-DD') 
				AND to_char(ORDER_DATE,'YYYY-MM-DD') >= to_char(add_months(SYSDATE,-1),'YYYY-MM-DD')
			 ]]>
	            ORDER BY ORDER_NO DESC
	        </when>
	        
	        <when test="items == '3달'">
			 <![CDATA[
			 	AND to_char(ORDER_DATE,'YYYY-MM-DD') <=	to_char(SYSDATE,'YYYY-MM-DD') 
				AND to_char(ORDER_DATE,'YYYY-MM-DD') >= to_char(add_months(SYSDATE,-3),'YYYY-MM-DD')
			 ]]>								
	            ORDER BY ORDER_NO DESC
	        </when>
	        
	        <when test="items == '1년'">
			 <![CDATA[						     
		 		AND to_char(ORDER_DATE,'YYYY-MM-DD') <=	to_char(SYSDATE,'YYYY-MM-DD') 
				AND to_char(ORDER_DATE,'YYYY-MM-DD') >= to_char(add_months(SYSDATE,-12),'YYYY-MM-DD')
			 ]]>								
	            ORDER BY ORDER_NO DESC
	        </when>  
	        <!-- 전체 검색이 아닐 경우 -->
	        <otherwise>
	            ORDER BY ORDER_NO DESC
	        </otherwise>	     
	    </choose>
	</select>
	
	<!-- 회원 주문 조회  SQL -->
 	<select id="selectMemberOrderList" parameterType="hashmap" resultMap="orderCheck-resultmap">
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM( 			
						<include refid="select-orderCherk-sql"/>
						WHERE MEMBER_ID = #{memberId}
						    <choose>
							 	<when test="items == '1달'">
								 <![CDATA[
							 		AND to_char(ORDER_DATE,'YYYY-MM-DD') <=	to_char(SYSDATE,'YYYY-MM-DD') 
									AND to_char(ORDER_DATE,'YYYY-MM-DD') >= to_char(add_months(SYSDATE,-1),'YYYY-MM-DD')
								 ]]>
						            ORDER BY ORDER_NO DESC
						        </when>
						        
						        <when test="items == '3달'">
								 <![CDATA[
								 	AND to_char(ORDER_DATE,'YYYY-MM-DD') <=	to_char(SYSDATE,'YYYY-MM-DD') 
									AND to_char(ORDER_DATE,'YYYY-MM-DD') >= to_char(add_months(SYSDATE,-3),'YYYY-MM-DD')
								 ]]>								
						            ORDER BY ORDER_NO DESC
						        </when>
						        
						        <when test="items == '1년'">
								 <![CDATA[						     
							 		AND to_char(ORDER_DATE,'YYYY-MM-DD') <=	to_char(SYSDATE,'YYYY-MM-DD') 
									AND to_char(ORDER_DATE,'YYYY-MM-DD') >= to_char(add_months(SYSDATE,-12),'YYYY-MM-DD')
								 ]]>								
						            ORDER BY ORDER_NO DESC
						        </when>  
						        <!-- 전체 검색이 아닐 경우 -->
						        <otherwise>
						            ORDER BY ORDER_NO DESC
						        </otherwise>
						     
						    </choose>
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}		
	</select>	
		
	<!-- 해당 주문 상제 정보  SQL -->
 	<select id="selectOrderProductList" parameterType="int" resultMap="orderProduct-resultmap">
		<include refid="select-orderProduct-sql"/>
		WHERE ORDER_NO = #{orderNo}
	</select>	
	

	<!-- 자신의 주문 조회 날짜  SQL -->
 	<select id="selectMemberOrderDateList" parameterType="string" resultMap="orderCheck-resultmap">
		<include refid="select-orderCherk-sql"/>
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	
	<!-- 주문량 상위 TOP3 리스트 조회  SQL -->
 	<select id="selectTop3List" resultMap="orderCheck-orderProduct-resultmap">
			<include refid="select-order-product-sql"/>		
			AND (c.HANDLING = '배송완료'
			OR c.HANDLING = '주문완료') 
			AND ROWNUM &lt;= 3		
	</select>	
	
	<select id="selectMonthProduct" resultType="java.util.HashMap">
			SELECT 	COUNT(*) SALE_COUNT, p.PRODUCT_NAME PRODUCT_NAME
			FROM 	ORDER_CHECK c, ORDER_PRODUCT p
			WHERE   c.ORDER_NO = p.ORDER_NO 
			AND		(c.HANDLING = '주문완료' OR c.HANDLING = '배송완료')	
			AND		to_char(c.ORDER_DATE,'YYYY-MM-DD') <![CDATA[<=]]> to_char(SYSDATE,'YYYY-MM-DD')
			AND		ROWNUM  <![CDATA[<=]]> 20
			GROUP BY p.PRODUCT_NAME
			ORDER BY SALE_COUNT DESC
	</select> 
	
	<select id="selectYearProduct" resultType="java.util.HashMap">
		SELECT YYYY, SUM("01") AS "01월", SUM("02") AS "02월", SUM("03") AS "03월", SUM("04") AS "04월", SUM("05") AS "05월", SUM("06") AS "06월",
		SUM("07") AS "07월", SUM("08") AS "08월", SUM("09") AS "09월", SUM("10") AS "10월", SUM("11") AS "11월", SUM("12") AS "12월"
		FROM(
		        SELECT TO_CHAR(ORDER_DATE,'YYYY') AS YYYY, TO_CHAR(ORDER_DATE,'MM') AS MM, TO_CHAR(ORDER_DATE,'DD') AS DD
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '01', TOTAL_PRICE, 0) AS "01"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '02', TOTAL_PRICE, 0) AS "02"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '03', TOTAL_PRICE, 0) AS "03"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '04', TOTAL_PRICE, 0) AS "04"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '05', TOTAL_PRICE, 0) AS "05"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '06', TOTAL_PRICE, 0) AS "06"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '07', TOTAL_PRICE, 0) AS "07"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '08', TOTAL_PRICE, 0) AS "08"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '09', TOTAL_PRICE, 0) AS "09"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '10', TOTAL_PRICE, 0) AS "10"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '11', TOTAL_PRICE, 0) AS "11"
		        , DECODE(TO_CHAR(ORDER_DATE,'MM'), '12', TOTAL_PRICE, 0) AS "12"
		        FROM ORDER_CHECK
		        ORDER BY DD
		)GROUP BY YYYY
	</select> 
</mapper>