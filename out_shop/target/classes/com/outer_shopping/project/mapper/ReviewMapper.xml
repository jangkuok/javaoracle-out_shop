<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.outer_shopping.project.mapper.ReviewMapper">
	<!-- 
			Review 테이블 관련 mapper
			+ Review 등록
			+ Review 수종
			+ Review 삭제
			+ Review 조회
	 -->
	 
	<sql id="all-column">
		REVIEW_NO, REVIEW_SUBJECT,	
		REVIEW_CONTENT, PICTURE_NAME, 
		THUMBNAIL_NAME, STAR, 
		REVIEW_DATE, MEMBER_ID, 
		OUTER_NO
	</sql> 
	
	<!-- 전체 조회 sql -->
	<sql id="select-reviewList-sql">
		SELECT 	REVIEW_NO, REVIEW_SUBJECT,	
				REVIEW_CONTENT, PICTURE_NAME, 
				THUMBNAIL_NAME, STAR, 
				REVIEW_DATE, MEMBER_ID, 
				OUTER_NO
		FROM REVIEW
	</sql>	 
	
	
	<!-- 리뷰 resultMap -->
	<resultMap id="review-resultmap" type="com.outer_shopping.project.vo.ReviewVo">
		<id column="REVIEW_NO" property="reviewNo"/>
		<result column="REVIEW_SUBJECT" property="subject"/>
		<result column="REVIEW_CONTENT" property="content"/>
		<result column="PICTURE_NAME" property="pictureName"/>
		<result column="THUMBNAIL_NAME" property="thumbnailName"/>
		<result column="STAR" property="star"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="OUTER_NO" property="outerNo"/>
	</resultMap>
	
	
	<!-- 리뷰 등록 SQL -->
	<insert id="insertReview" parameterType="com.outer_shopping.project.vo.ReviewVo">
		<selectKey resultType="int" keyProperty="reviewNo" order="BEFORE">
			select REVIEW_NO.nextval from dual
		</selectKey>
		INSERT INTO REVIEW
		VALUES(
				#{reviewNo},
				#{subject},
				#{content},
				#{pictureName},
				#{thumbnailName},
				#{star},
				SYSDATE,
				#{memberId},
				#{outerNo}
				
			   )
	</insert>
	
	<!-- 리뷰 수정 SQL -->
	<update id="updateReview" parameterType="com.outer_shopping.project.vo.ReviewVo">
		UPDATE 	REVIEW 
		SET		
				REVIEW_SUBJECT = #{subject},
				REVIEW_CONTENT = #{content},
				PICTURE_NAME = #{pictureName},
				THUMBNAIL_NAME = #{thumbnailName},
				STAR = #{star},
				REVIEW_DATE = #{reviewDate},
				MEMBER_ID = #{memberId},
				OUTER_NO = #{outerNo}
		WHERE	REVIEW_NO = #{reviewNo}
	</update>
	
	<!-- 리뷰 삭제 SQL -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM REVIEW WHERE REVIEW_NO = #{reviewNo}
	</delete>
	
	<!-- 리뷰 List 카운트  -->
	<select id = "selectReivewListCount" resultType="_int">
		SELECT COUNT(*) FROM REVIEW
	</select>
		
	<!-- 리뷰 List 조회 SQL -->
	<select id="selectListReview" parameterType="hashmap" resultMap="review-resultmap">	
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM( 			
						<include refid="select-reviewList-sql"/>
                        ORDER BY REVIEW_NO DESC 
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}
	</select>
	
	
	<!-- 회원별 자신의 글 보기 SQL -->
	<select id="selectMemberReview" parameterType="hashmap" resultMap="review-resultmap">
		SELECT <include refid="all-column"/>
		FROM(
			SELECT ROWNUM RNUM, <include refid="all-column"/>
			FROM( 			
						<include refid="select-reviewList-sql"/>
						WHERE MEMBER_ID = #{memberId}
                        ORDER BY REVIEW_NO DESC 
				)
			WHERE ROWNUM &lt;=#{endIndex}	
			)
		WHERE RNUM>=#{startIndex}
	</select>


</mapper>